plugins {
    id 'java'
	id 'idea'
	id 'org.openapi.generator' version '5.2.1'
    id "de.undercouch.download" version "4.1.1"
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

def queryDslVersion = '4.3.1'
def elasticsearchVersion = '7.14.1'
def sparkVersion = '3.0.3'
def springVersion = '2.5.5'
def hadoopVersion = '3.2.0'

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework:spring-tx:5.3.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-web-services:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.1'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.googlecode.json-simple:json-simple:1.1'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.6.1'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.1'
    implementation("org.springframework.boot:spring-boot-starter:${springVersion}") {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation("org.springframework.boot:spring-boot-starter-web:${springVersion}") {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation("org.springframework.boot:spring-boot-starter-security:${springVersion}") {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springVersion}") {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation("org.springframework.boot:spring-boot-starter-validation:${springVersion}") {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation group: 'com.opencsv', name: 'opencsv', version: '5.2'
	implementation "mysql:mysql-connector-java:5.1.27"
	implementation "org.hibernate:hibernate-core"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "org.modelmapper:modelmapper:2.3.0"
    implementation "com.vladmihalcea:hibernate-types-52:2.9.12"

	implementation("org.springdoc:springdoc-openapi-ui:1.5.0")
	implementation "org.springdoc:springdoc-openapi-webmvc-core:1.5.0"
	implementation "org.springdoc:springdoc-openapi-security:1.5.0"

	implementation("org.apache.spark:spark-sql_2.12:${sparkVersion}") {
		exclude group: 'javax.servlet', module: 'servlet-api'
	}
	implementation("org.apache.spark:spark-mllib_2.12:${sparkVersion}") {
		exclude group: 'javax.servlet', module: 'servlet-api'
	}
	implementation "com.linkedin.isolation-forest:isolation-forest_3.0.0_2.12:2.0.4"

	implementation "com.auth0:java-jwt:3.10.3"

	implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
	implementation "org.elasticsearch:elasticsearch-spark-30_2.12:${elasticsearchVersion}"
	implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}"
	implementation "org.elasticsearch.client:transport:${elasticsearchVersion}"
	implementation 'org.codehaus.janino:commons-compiler:3.0.16'
	implementation 'org.codehaus.janino:janino:3.0.16'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task downloadFile(type: Download) {
 src "http://localhost:8083/v3/api-docs"
 dest "$buildDir/api.json"
 onlyIfModified true
 useETag true
}

openApiGenerate {
	inputSpec = "$buildDir/api.json"
	generatorName = "typescript-axios"
	outputDir = "$projectDir/../web/webapp/src/api/gen"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.openApiGenerate.dependsOn tasks.downloadFile

import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer

shadowJar {
    zip64 true
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
	from './src/main/resources'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories' ]
        mergeStrategy = "append"
    }

	relocate 'com.fasterxml.jackson', 'shadow.com.fasterxml.jackson'
	relocate 'com.fasterxml.jackson.databind', 'shadow.com.fasterxml.jackson.databind'
	relocate 'javax.servlet', 'shadow.javax.servlet'
	relocate 'com.google.code', 'shadow.com.google.code'
	relocate 'com.google.code.gson', 'shadow.com.google.code.gson'
	relocate 'com.google.gson', 'shadow.com.google.gson'
	relocate 'org.yaml', 'shadow.org.yaml'

	exclude 'org.slf4j'
}