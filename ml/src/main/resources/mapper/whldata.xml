<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.gaion.armoredVehicle.web.analysis.mapper.WhldataMapper">

	<insert id="insertWhldata" parameterType="kr.gaion.armoredVehicle.web.analysis.model.Whldata">
		insert into WHLDATA(SDAID, OPERDATE, OPERTIME, DATE, TIME, W_RPM, L_W_V_2X, 
		L_W_V_3X, L_W_S_Fault3, R_W_V_2X, R_W_V_3X, R_W_S_Fault3, AI_Predict, FILENM)
		values(#{sdaid}, #{operdate}, #{opertime}, #{date}, #{time}, #{W_RPM}, 
		#{L_W_V_2X}, #{L_W_V_3X}, #{L_W_S_Fault3}, #{R_W_V_2X}, #{R_W_V_3X}, 
		#{R_W_S_Fault3}, #{AI_Predict}, #{filenm})
	</insert>
	
	<insert id="insertWhlsim" parameterType="kr.gaion.armoredVehicle.web.analysis.model.Whldata">
		insert into WHLSIM(SDAID, OPERDATE, OPERTIME, DATE, TIME, W_RPM, L_W_V_2X, 
		L_W_V_3X, L_W_S_Fault3, R_W_V_2X, R_W_V_3X, R_W_S_Fault3, AI_Predict, FILENM)
		values(#{sdaid}, #{operdate}, #{opertime}, #{date}, #{time}, #{W_RPM}, 
		#{L_W_V_2X}, #{L_W_V_3X}, #{L_W_S_Fault3}, #{R_W_V_2X}, #{R_W_V_3X}, 
		#{R_W_S_Fault3}, #{AI_Predict}, #{filenm})
	</insert>
	
	<select id="findWhldataBySdaidAndFilenm" parameterType="java.util.Map" 
	resultType="kr.gaion.armoredVehicle.web.analysis.model.Whldata">
		select *
		from WHLDATA
		where SDAID = #{sdaid}
		and FILENM = #{filenm}
		order by date
	</select>
	
	<select id="countWhldataByTable" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest" resultType="Integer">
		select ifnull(count(w.DATE),0)
		from WHLDATA w 
		left join SDA s on w.SDAID = s.SDAID 
		left join ENGDATA e on e.DATE = w.DATE
		where w.SDAID = #{sdaid}
		and w.DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
	</select>
	
	<select id="findWhldata" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest" resultType="kr.gaion.armoredVehicle.web.analysis.model.Whldata">
		select s.SDANM, w.*,  e.AC_h , e.AC_v , e.AC_a 
		from WHLDATA w
		left join SDA s on w.SDAID = s.SDAID 
		left join ENGDATA e on e.DATE = w.DATE
		and w.SDAID = #{sdaid}
		and w.DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
		order by w.DATE
		limit #{page}, #{size}
	</select>
	
	<select id="findWhldataForExcel" parameterType="kr.gaion.armoredVehicle.web.analysis.model.ExcelDownByMonitorDiagnos" resultType="kr.gaion.armoredVehicle.web.analysis.model.Whldata">
		select s.SDANM, w.*,  e.AC_h , e.AC_v , e.AC_a 
		from WHLDATA w
		left join SDA s on w.SDAID = s.SDAID 
		left join ENGDATA e on e.DATE = w.DATE
		and w.SDAID = #{sdaid}
		and w.DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
		order by w.DATE
	</select>

	<select id="countWhllife" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest"
			resultType="Integer">
		select ifnull(count(idx),0)
		from WHLLIFEDATA
		where AI_Trip is not null
		<if test="sdaid != null">
			and SDAID = #{sdaid}
		</if>
		<if test="startDate != null and endDate != null">
			and DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
		</if>
	</select>

	<select id="findWhllife" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest"
			resultType="kr.gaion.armoredVehicle.web.analysis.model.Whllife">
		select
			case
				when T.DISTANCE-T.AI_Trip <![CDATA[<]]> 0 then 0
				ELSE
					T.DISTANCE-T.AI_Trip
			end as REMAINDISTANCE,
			case
				when ((T.DISTANCE-T.AI_Trip) * 100 / T.DISTANCE) <![CDATA[<]]> 0 then 0
				else
					(T.DISTANCE-T.AI_Trip) * 100 / T.DISTANCE
			end as REMAINRATIO,
			T.*,
			YEARS,
			case
				when ((T.DISTANCE-T.AI_Trip) * 100 / T.DISTANCE) <![CDATA[<]]> 0 then 0
				else
					(T.DISTANCE-T.AI_Trip) * YEARS / T.DISTANCE
			end as REMAINTIME
		from (
			select
				IDX
				, AI_Trip
				, (SELECT DISTANCE FROM LIFETHRESHOLD WHERE SNSRTYPE='WHEEL') AS DISTANCE
				, (SELECT YEARS FROM LIFETHRESHOLD WHERE SNSRTYPE='WHEEL') AS YEARS
				, AI_Trip_ALGO
				, AI_Trip_MODEL
				, DATE_FORMAT(AI_Trip_DATE,'%Y-%m-%d') AS AI_Trip_DATE
				, W_2X
				, W_3X
				, W_Fault3
				, FILENM
				, SDAID
				, DATE_FORMAT(DATE,'%Y-%m-%d') AS DATE
			from WHLLIFEDATA
			where 1 = 1
			and AI_Trip is not null
			<if test="sdaid != null">
				and SDAID = #{sdaid}
			</if>
			<if test="startDate != null and endDate != null">
				and DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
			</if>
			order by idx
			limit #{page}, #{size}
		) T
	</select>

	<select id="findPart" parameterType="java.util.Map" resultType="Integer">
		select ifnull(count(*),0)
		from WHLDATA
		where (AI_LW = 1 OR AI_RW = 1 )
		and DATE_FORMAT(`DATE`,'%Y-%m-%d') = DATE_FORMAT(#{startdate},'%Y-%m-%d')
		and SDAID = #{sdaid}
	</select>
</mapper>