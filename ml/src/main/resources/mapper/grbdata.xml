<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.gaion.armoredVehicle.web.analysis.mapper.GrbdataMapper">

	<insert id="insertGrbdata" parameterType="kr.gaion.armoredVehicle.web.analysis.model.Grbdata">
		insert into GRBDATA(SDAID, OPERDATE, OPERTIME, DATE, TIME, W_RPM, G_V_OverallRMS, 
		G_V_Wheel1X, G_V_Wheel2X, G_V_Pinion1X, G_V_Pinion2X, G_V_GMF1X, G_V_GMF2X, 
		AI_Predict, FILENM)
		values(#{sdaid}, #{operdate}, #{opertime}, #{date}, #{time}, #{W_RPM}, #{G_V_OverallRMS}, 
		#{G_V_Wheel1X}, #{G_V_Wheel2X}, #{G_V_Pinion1X}, #{G_V_Pinion2X}, #{G_V_GMF1X}, 
		#{G_V_GMF2X}, #{AI_Predict}, #{filenm})
	</insert>
	
	<insert id="insertGrbsim" parameterType="kr.gaion.armoredVehicle.web.analysis.model.Grbdata">
		insert into GRBSIM(SDAID, OPERDATE, OPERTIME, DATE, TIME, W_RPM, G_V_OverallRMS, 
		G_V_Wheel1X, G_V_Wheel2X, G_V_Pinion1X, G_V_Pinion2X, G_V_GMF1X, G_V_GMF2X, 
		AI_Predict, FILENM)
		values(#{sdaid}, #{operdate}, #{opertime}, #{date}, #{time}, #{W_RPM}, #{G_V_OverallRMS}, 
		#{G_V_Wheel1X}, #{G_V_Wheel2X}, #{G_V_Pinion1X}, #{G_V_Pinion2X}, #{G_V_GMF1X}, 
		#{G_V_GMF2X}, #{AI_Predict}, #{filenm})
	</insert>
	
	<select id="findGrbdataBySdaidAndFilenm" parameterType="java.util.Map" 
	resultType="kr.gaion.armoredVehicle.web.analysis.model.Grbdata">
		select *
		from GRBDATA
		where SDAID = #{sdaid}
		and FILENM = #{filenm}
		order by date
	</select>
	
	<select id="countGrbdataByTable" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest" resultType="Integer">
		select ifnull(count(g.DATE),0)
		from GRBDATA g 
		left join SDA s on g.SDAID = s.SDAID 
		left join ENGDATA e on e.DATE = g.DATE
		where g.SDAID = #{sdaid}
		and g.DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
	</select>
	
	<select id="findGrbdata" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest" resultType="kr.gaion.armoredVehicle.web.analysis.model.Grbdata">
		select s.SDANM, g.*, e.AC_h , e.AC_v , e.AC_a 
		from GRBDATA g
		left join SDA s on g.SDAID = s.SDAID 
		left join ENGDATA e on e.DATE = g.DATE
		where g.SDAID = s.SDAID 
		and g.SDAID = #{sdaid}
		and g.DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
		order by g.DATE
		limit #{page}, #{size}
	</select>
		
	
	<select id="findGrbdataForExcel" parameterType="kr.gaion.armoredVehicle.web.analysis.model.ExcelDownByMonitorDiagnos" resultType="kr.gaion.armoredVehicle.web.analysis.model.Grbdata">
		select s.SDANM, g.*, e.AC_h , e.AC_v , e.AC_a 
		from GRBDATA g
		left join SDA s on g.SDAID = s.SDAID 
		left join ENGDATA e on e.DATE = g.DATE
		where g.SDAID = s.SDAID 
		and g.SDAID = #{sdaid}
		and g.DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
		order by g.DATE
	</select>

	<select id="countGrblife" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest"
			resultType="Integer">
		select ifnull(count(idx),0)
		from GRBLIFEDATA
		where AI_Trip is not null
		<if test="sdaid != null">
			and SDAID = #{sdaid}
		</if>
		<if test="startDate != null and endDate != null">
			and DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
		</if>
	</select>

	<select id="findGrblife" parameterType="kr.gaion.armoredVehicle.web.analysis.model.troubleDataRequest"
			resultType="kr.gaion.armoredVehicle.web.analysis.model.Grblife">
		select
			case
				when T.DISTANCE-T.AI_Trip <![CDATA[<]]> 0 then 0
				ELSE
					T.DISTANCE-T.AI_Trip
			end as REMAINDISTANCE,
			case
				when ((T.DISTANCE-T.AI_Trip) * 100 / T.DISTANCE) <![CDATA[<]]> 0 then 0
				else
					(T.DISTANCE-T.AI_Trip) * 100 / T.DISTANCE
			end as REMAINRATIO,
			T.*,
			YEARS,
			case
				when ((T.DISTANCE-T.AI_Trip) * 100 / T.DISTANCE) <![CDATA[<]]> 0 then 0
				else
					(T.DISTANCE-T.AI_Trip) * YEARS / T.DISTANCE
			end as REMAINTIME
		from (
			select
				IDX
				, AI_Trip
				, (SELECT DISTANCE FROM LIFETHRESHOLD WHERE SNSRTYPE='REDUCER') AS DISTANCE
				, (SELECT YEARS FROM LIFETHRESHOLD WHERE SNSRTYPE='REDUCER') AS YEARS
				, AI_Trip_ALGO
				, AI_Trip_MODEL
				, DATE_FORMAT(AI_Trip_DATE,'%Y-%m-%d') AS AI_Trip_DATE
				, G_OverallRMS
				, G_Wheel1X
				, G_Wheel2X
				, G_Pinion1X
				, G_Pinion2X
				, G_GMF1X
				, G_GMF2X
				, FILENM
				, SDAID
				, DATE_FORMAT(DATE,'%Y-%m-%d') AS DATE
			from GRBLIFEDATA
			where 1 = 1
			and AI_Trip is not null
			<if test="sdaid != null">
				and SDAID = #{sdaid}
			</if>
			<if test="startDate != null and endDate != null">
				and DATE between STR_TO_DATE(#{startDate}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{endDate}, '%Y-%m-%d %H:%i:%s')
			</if>
			order by idx
			limit #{page}, #{size}
		) T
	</select>

	<select id="findPart" parameterType="java.util.Map"
		resultType="Integer">
		select ifnull(count(*),0)
		from GRBDATA
		where AI_GEAR = 1
		and DATE_FORMAT(`DATE`,'%Y-%m-%d') = DATE_FORMAT(#{startdate},'%Y-%m-%d')
		and SDAID = #{sdaid}
	</select>
</mapper>